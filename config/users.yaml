openapi: 3.0.0
info:
    title: Train API
    version: 1.0.0
    description: Train API documentation
servers:
    - url: http://localhost:3000/api

tags:
    - name: Users
      description: Operations related to users

paths:
    /users/{userId}/followData:
        get:
            tags:
                - Users
            summary: Fetch user's follow data
            description: Retrieves a list of followers and following for a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                      type: string
                  description: The unique identifier of the user whose followers are to be retrieved
            responses:
                200:
                    description: List of followers retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    followers:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                userId:
                                                    type: string
                                                    description: The unique identifier of the follower
                                                username:
                                                    type: string
                                                    description: The username of the follower
                                    following:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                userId:
                                                    type: string
                                                    description: The unique identifier of the follower
                                                username:
                                                    type: string
                                                    description: The username of the follower
                400:
                    description: Invalid user id provided
                404:
                    description: User not found
                401:
                    description: Unauthorized - Token not provided or invalid
                500:
                    description: Internal server error
    /{userId}:
        get:
            tags:
                - Users
            summary: Fetch user by Id
            description: Retrieve data for a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                      type: string
                  description: The user ID
            responses:
                200:
                    description: User data retrieved successfully
                401:
                    description: Unauthorized
                404:
                    description: User not found
    /users/{userId}/groups:
        get:
            tags:
                - Users
            summary: Fetch user's groups
            description: Retrieves a list of groups associated with a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                      type: string
                  description: The unique identifier of the user whose groups are to be retrieved
            responses:
                200:
                    description: List of user groups retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        groupId:
                                            type: string
                                            description: The unique identifier of the group
                                        groupName:
                                            type: string
                                            description: The name of the group
                401:
                    description: Unauthorized
                404:
                    description: User not found
                500:
                    description: Internal server error
    /users/{userId}/followers:
        get:
            tags:
                - Users
            summary: Fetch user's followers
            description: Retrieves a list of followers for a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                      type: string
                  description: The unique identifier of the user whose followers are to be retrieved
            responses:
                200:
                    description: List of followers retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        userId:
                                            type: string
                                            description: The unique identifier of the follower
                                        username:
                                            type: string
                                            description: The username of the follower
                400:
                    description: Invalid user id provided
                404:
                    description: User not found
                401:
                    description: Unauthorized - Token not provided or invalid
                500:
                    description: Internal server error
    /users/{userId}/following:
        get:
            tags:
                - Users
            summary: Fetch user's followers
            description: Retrieves a list of followers for a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                      type: string
                  description: The unique identifier of the user whose followers are to be retrieved
            responses:
                200:
                    description: List of followers retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        userId:
                                            type: string
                                            description: The unique identifier of the follower
                                        username:
                                            type: string
                                            description: The username of the follower
                400:
                    description: Invalid user id provided
                404:
                    description: User not found
                401:
                    description: Unauthorized - Token not provided or invalid
                500:
                    description: Internal server error
    /users/{userId}/profile:
        put:
            tags:
                - Users
            summary: Update user profile
            description: Updates the profile information of a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                      type: string
                  description: The unique identifier of the user whose profile is to be updated
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                userBio:
                                    type: string
                                    description: The bio of the user
                                name:
                                    type: string
                                    description: The name of the user
                                accountType:
                                    type: integer
                                    description: The account type identifier
                            required:
                                - userBio
                                - name
                                - accountType
            responses:
                200:
                    description: User profile updated successfully
                400:
                    description: Bad request - Invalid input or missing fields
                404:
                    description: User not found
                401:
                    description: Unauthorized - Token not provided or invalid
                500:
                    description: Internal server error
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
